configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

dependencies {
    compile project(':aws-lambda:verification-context-aws-lambda')
    compile project(':plugins:uk:uk-verification-context')
    compile project(':plugins:uk:uk-identity')
    compile project(':plugins:uk:uk-aws-lambda:uk-identity-aws-lambda')

    integrationTestCompile project(':dao:verification-context:verification-context-dao-fake')
    integrationTestCompile project(':dao:identity:identity-dao-fake')
    integrationTestCompile 'org.skyscreamer:jsonassert:1.5.0'
}

task buildZip(type: Zip) {
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtime
    }
}

build.dependsOn buildZip

task integrationTest(type: Test) {
    systemProperty 'sqlite4java.library.path', '../../libs/sqlite4java'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test