configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

dependencies {
    compile project(':aws-lambda')
    compile project(':aws-lambda:identity-aws-lambda')
    compile project(':json-api:verification-context-json-api')
    compile project(':dao:verification-context:verification-context-dao-dynamodb')
    compile project(':dao:lockout-decision:lockout-decision-dao-dynamodb')

    integrationTestCompile project(':dao:verification-context:verification-context-dao-fake')
    integrationTestCompile project(':dao:identity:identity-dao-fake')
    integrationTestCompile project(':dao:lockout-decision:lockout-decision-dao-fake')
    integrationTestCompile project(':events:fake-events')
    integrationTestCompile project(':json:lockout-decision-json')
    integrationTestCompile 'org.skyscreamer:jsonassert:1.5.0'
}

task integrationTest(type: Test) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test